package com.k9sv.domain.pojo;

// Generated 2013-3-5 1:50:15 by Hibernate Tools 3.6.0

import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.stereotype.Component;

import com.k9sv.util.DateUtil;

/**
 * Account generated by hbm2java
 */
@SuppressWarnings("unused")
public class Account implements java.io.Serializable, UserDetails {

	/**
	 * 
	 */
	private static final long serialVersionUID = -1998123938680158754L;

	public final static Role userRole = new Role();
	public final static Role anonymous = new Role();
	static {
		userRole.setTitle("ROLE_USER");
		anonymous.setTitle("anonymous");
	}

	private int id;

	private Profile profile;

	private String username;

	private String password;

	private Date created;

	private String createdStr;

	private int deleted;

	private String openId;

	private String clientid;

	private String platform;

	private String unionid;

	private String version;

	private String systemversion;

	private String accessToken;

	private int checked; // 0,未认证的手机号，1认证的手机号

	private Date lastLogin;
	private String lastLoginStr;

	/**
	 * 角色
	 */
	private int roleid;

	private Role role; // 对应角色id

	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		final Account other = (Account) obj;
		if (this.getId() != other.getId())
			return false;
		return true;
	}

	public Date getLastLogin() {
		return lastLogin;
	}

	public void setLastLogin(Date lastLogin) {
		this.lastLogin = lastLogin;
	}

	public int getChecked() {
		return checked;
	}

	public void setChecked(int checked) {
		this.checked = checked;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	public String getSystemversion() {
		return systemversion;
	}

	public void setSystemversion(String systemversion) {
		this.systemversion = systemversion;
	}

	public Profile getProfile() {
		return profile;
	}

	public void setProfile(Profile profile) {
		this.profile = profile;
	}

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public Date getCreated() {
		return created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	public int getDeleted() {
		return deleted;
	}

	public void setDeleted(int deleted) {
		this.deleted = deleted;
	}

	public String getOpenId() {
		return openId;
	}

	public void setOpenId(String openId) {
		this.openId = openId;
	}

	public String getClientid() {
		return clientid;
	}

	public void setClientid(String clientid) {
		this.clientid = clientid;
	}

	public String getPlatform() {
		return platform;
	}

	public void setPlatform(String platform) {
		this.platform = platform;
	}

	public String getUnionid() {
		return unionid;
	}

	public void setUnionid(String unionid) {
		this.unionid = unionid;
	}

	public String getAccessToken() {
		return accessToken;
	}

	public void setAccessToken(String accessToken) {
		this.accessToken = accessToken;
	}

	public String getVersion() {
		return version;
	}

	public void setVersion(String version) {
		this.version = version;
	}

	public int getRoleid() {
		return roleid;
	}

	public void setRoleid(int roleid) {
		this.roleid = roleid;
	}

	@Override
	public Collection<? extends GrantedAuthority> getAuthorities() {
		ArrayList<GrantedAuthority> root = new ArrayList<GrantedAuthority>();
		root.add(userRole);
		root.add(Account.anonymous);
		if (role != null) {
			root.add(role);
		}
		return root;
	}

	@Override
	public boolean isAccountNonExpired() {
		return true;
	}

	@Override
	public boolean isAccountNonLocked() {
		return true;
	}

	@Override
	public boolean isCredentialsNonExpired() {
		return true;
	}

	@Override
	public boolean isEnabled() {
		return true;
	}

	public String getCreatedStr() {
		try {
			return DateUtil.getFormatDateTime(created, "yyyy-MM-dd HH:mm");
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}

	public String getLastLoginStr() {
		try {
			return DateUtil.getFormatDateTime(lastLogin, "yyyy-MM-dd");
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

}
